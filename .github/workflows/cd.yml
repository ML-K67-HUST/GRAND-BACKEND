name: CD

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v3
    
    - name: Install flyctl
      run: |
        curl -L https://fly.io/install.sh | sh
        echo "$HOME/.fly/bin" >> $GITHUB_PATH
        
    - name: Deploy to fly.io
      working-directory: ./src
      env:
        FLYCTL_ACCESS_TOKEN: ${{ secrets.FLYCTL_ACCESS_TOKEN }}
      run: |
        # Create app if it doesn't exist
        flyctl apps create grand-backend --no-remote || true
        
        # Set secrets
        flyctl secrets set TOGETHER_AI_API_KEY="${{ secrets.TOGETHER_AI_API_KEY }}"
        flyctl secrets set AWS_POSTGRES_URL="${{ secrets.AWS_POSTGRES_URL }}"
        flyctl secrets set POSTGRES_USER="${{ secrets.POSTGRES_USER }}"
        flyctl secrets set POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"
        flyctl secrets set POSTGRES_DB="${{ secrets.POSTGRES_DB }}"
        flyctl secrets set POSTGRES_PORT="${{ secrets.POSTGRES_PORT }}"
        flyctl secrets set MONGODB_URL="${{ secrets.MONGDB_URL }}"
        flyctl secrets set MONGDB_TIMENEST_DN_NAME="${{ secrets.MONGDB_TIMENEST_DN_NAME }}"
        flyctl secrets set MAILGUN_API_KEY="${{ secrets.MAILGUN_API_KEY }}"
        flyctl secrets set GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}"
        flyctl secrets set GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}"
        flyctl secrets set SECRET_KEY="${{ secrets.SECRET_KEY }}"
        flyctl secrets set REDIRECT_URL="${{ secrets.REDIRECT_URL }}"
        flyctl secrets set FRONTEND_URL="${{ secrets.FRONTEND_URL }}"
        flyctl secrets set JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}"
        flyctl secrets set JWT_REFRESH_SECRET_KEY="${{ secrets.JWT_REFRESH_SECRET_KEY }}"
        flyctl secrets set REDIS_URL="${{ secrets.REDIS_URL }}"
        flyctl secrets set REDIS_PORT="${{ secrets.REDIS_PORT }}"
        flyctl secrets set REDIS_PASSWORD="${{ secrets.REDIS_PASSWORD }}"
        
        # Deploy the application
        flyctl deploy --remote-only 